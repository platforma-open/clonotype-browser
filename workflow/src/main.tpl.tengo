pt := import("@platforma-sdk/workflow-tengo:pt")
wf := import("@platforma-sdk/workflow-tengo:workflow")
assets := import("@platforma-sdk/workflow-tengo:assets")
render := import("@platforma-sdk/workflow-tengo:render")
util := import(":util")
pFrames := import("@platforma-sdk/workflow-tengo:pframes")

doCalculations := assets.importTemplate(":do-calculations-v2")
exportTable := assets.importTemplate(":export-table")

wf.setPreRun(assets.importTemplate(":prerun"))

wf.body(func(args) {
	if is_undefined(args.inputAnchor) {
		return {
			outputs: {},
			exports: {}
		}
	}

	blockId := wf.getBlockId()

	exports := {}
	outputs := {}

	if len(args.annotationSpecs.specs) > 0 {
		columnBundle := util.createColumnBundle2(wf, args)
		calculationResult := render.createEphemeral(doCalculations, {
			blockId: blockId,
			blockArgs: args,
			columnBundle: columnBundle,
			computeFilters: true
		})

		exports["annotationPf"] = calculationResult.output("annotationPf")
		exports["statsPf"] = calculationResult.output("statsPf")
		exports["filtersPf"] = calculationResult.output("filtersPf")
	}

	return {
		outputs: outputs,
		exports: exports
	}
})

